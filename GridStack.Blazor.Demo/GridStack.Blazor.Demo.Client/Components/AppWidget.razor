<div class="container">
    @if (CanDelete)
    {
        <div class="delete">
            <DeleteButton OnClick="@OnDeleteWidget"/>
        </div>
    }
    <DynamicComponent Type="@GetWidgetType()" />
</div>

@code{

    [Parameter] public required string Id { get; set; }

    [Parameter] public bool CanDelete { get; set; }

    [Parameter] public required WidgetType WidgetType { get; set; }

    [Parameter] public EventCallback<string> OnDelete { get; set; }

    private async Task OnDeleteWidget()
    {
        Console.WriteLine($"Delete {Id}");
        
        await OnDelete.InvokeAsync(Id);
    }

    private Type GetWidgetType()
    {
        return WidgetType switch
        {
            WidgetType.Value => typeof(ValueAppWidget),
            WidgetType.Graph => typeof(GraphAppWidget),
            _ => throw new NotImplementedException()
        };
    }
}